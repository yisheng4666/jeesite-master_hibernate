package com.thinkgem.jeesite.modules.asmt.service;

import java.util.List;

import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.service.BaseService;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.asmt.dao.AssementUserDao;
import com.thinkgem.jeesite.modules.asmt.entity.Assement;
import com.thinkgem.jeesite.modules.asmt.entity.AssementUser;

/**
 * 被考评用户Service
 * 
 * @author JianHui
 * @date 2017年9月6日--上午10:44:01
 *
 */

@Component
@Transactional(readOnly = true)
public class AssementUserservice extends BaseService {

	@Autowired
	private AssementUserDao assementUserDao;

	public AssementUser get(String id) {
		return assementUserDao.get(id);
	}

	public Page<AssementUser> find(Page<AssementUser> page, AssementUser assementUser) {
		DetachedCriteria dc = assementUserDao.createDetachedCriteria();
		if (StringUtils.isNotEmpty(assementUser.getAssement().getId())) {
			dc.add(Restrictions.eq("assement.id", assementUser.getAssement().getId()));
		}
		dc.add(Restrictions.eq(Assement.FIELD_DEL_FLAG, Assement.DEL_FLAG_NORMAL));
		dc.addOrder(Order.desc("id"));
		return assementUserDao.find(page, dc);
	}

	public List<AssementUser> find(String id) {
		DetachedCriteria dc = assementUserDao.createDetachedCriteria();
		dc.add(Restrictions.eq("assement.id", id));
		dc.add(Restrictions.eq(AssementUser.FIELD_DEL_FLAG, AssementUser.DEL_FLAG_NORMAL));
		dc.addOrder(Order.asc("organizationNo"));
		return assementUserDao.find(dc);
	}

	@Transactional(readOnly = false)
	public void save(AssementUser assementUser) {
		assementUserDao.save(assementUser);
	}

	@Transactional(readOnly = false)
	public void delete(String id) {
		assementUserDao.deleteById(id);
	}

	/**
	 * 根据考评ID查询被考评单位
	 * 
	 * @param 考评ID
	 * @return
	 * @author JianHui
	 */
	public List<AssementUser> findByAsseent(String id) {
		List<AssementUser> list = assementUserDao.findByAsseent(id);
		return list;
	}
}
