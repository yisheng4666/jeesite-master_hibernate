/**
 * There are <a href="https://github.com/thinkgem/jeesite">JeeSite</a> code generation
 */
package com.thinkgem.jeesite.modules.asmt.service;

import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.service.BaseService;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.asmt.entity.UnitCatalog;
import com.thinkgem.jeesite.modules.asmt.dao.UnitCatalogDao;

/**
 * 单位目录Service
 * @author lcy
 * @version 2017-10-13
 */
@Component
@Transactional(readOnly = true)
public class UnitCatalogService extends BaseService {

	@Autowired
	private UnitCatalogDao unitCatalogDao;
	
	public UnitCatalog get(String id) {
		return unitCatalogDao.get(id);
	}
	
	public Page<UnitCatalog> find(Page<UnitCatalog> page, UnitCatalog unitCatalog) {
		DetachedCriteria dc = unitCatalogDao.createDetachedCriteria();
		if (StringUtils.isNotEmpty(unitCatalog.getName())){
			dc.add(Restrictions.like("name", "%"+unitCatalog.getName()+"%"));
		}
		dc.add(Restrictions.eq(UnitCatalog.FIELD_DEL_FLAG, UnitCatalog.DEL_FLAG_NORMAL));
		dc.addOrder(Order.desc("id"));
		return unitCatalogDao.find(page, dc);
	}
	
	@Transactional(readOnly = false)
	public void save(UnitCatalog unitCatalog) {
		unitCatalogDao.save(unitCatalog);
	}
	
	@Transactional(readOnly = false)
	public void delete(String id) {
		unitCatalogDao.deleteById(id);
	}
	
}
